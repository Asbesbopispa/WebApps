buildscript {
    repositories {
	jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.0+'
        classpath 'org.xtend:xtend-android-gradle-plugin:0.3.4'
    }
}

apply plugin: 'android'
apply plugin: 'org.xtend.xtend-android'

task wrapper(type: Wrapper) {
  gradleVersion = '2.2.1'
}

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 17
    buildToolsVersion "21.1.1"

    dependencies {
      compile 'com.android.support:support-v4:20.0.0'
      compile 'org.eclipse.xtend:org.eclipse.xtend.lib:2.7.3'
      compile 'com.github.tobykurien:xtendroid:0.11.0'
    }

    sourceSets {
      main {
        manifest.srcFile 'AndroidManifest.xml'
        aidl.srcDirs = ['src']
        java.srcDirs = ['src']
        res.srcDirs = ['res']
        assets.srcDirs = ['assets']
      }
    }

   signingConfigs {
       release {
            storeFile file("release.keystore")
            storePassword "******"
            keyAlias "******"
            keyPassword "******"
       }
   }

    buildTypes {
        release {
            dependencies {
               compile 'com.google.code.findbugs:jsr305:2.0.2' // needed for proguard
            }
            
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFile file('proguard-project.txt')
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
        }
    }

    packagingOptions {
         exclude 'META-INF/eclipse.inf'
    }

   allprojects {
       afterEvaluate { project ->
           def propsFile = rootProject.file('keystore.properties')
           def configName = 'release'

           if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
               def props = new Properties()
               props.load(new FileInputStream(propsFile))
               android.signingConfigs[configName].storeFile = file(props['storeFile'])
               android.signingConfigs[configName].storePassword = props['storePassword']
               android.signingConfigs[configName].keyAlias = props['keyAlias']
               android.signingConfigs[configName].keyPassword = props['keyPassword']
           }
       }
   }
}
